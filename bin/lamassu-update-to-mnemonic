#!/usr/bin/env node

'use strict'

const fs = require('fs')
const path = require('path')
const os = require('os')
const mnemonicHelpers = require('../lib/mnemonic-helpers')
const options = require('../lib/options-loader')()

const mkdirSync = (dirPath) => {
  try {
    fs.mkdirSync(dirPath)
  } catch (err) {
    if (err.code !== 'EEXIST') throw err
    throw new Error('mnemonics folder already present on home')
  }
}

if (!options.opts.mnemonicPath && options.opts.seedPath) {
  const seed = fs.readFileSync(options.opts.seedPath, 'utf8').trim()
  const mnemonic = mnemonicHelpers.fromSeed(seed)

  options.opts.mnemonicPath = path.resolve(os.homedir(), 'mnemonics', 'mnemonic.txt')

  mkdirSync(path.dirname(options.opts.mnemonicPath))
  fs.writeFileSync(options.opts.mnemonicPath, mnemonic, 'utf8')
  fs.writeFileSync(options.path, JSON.stringify(options.opts, null, '\t'), 'utf8')
}
