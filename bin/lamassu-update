#!/usr/bin/env bash
set -e

export INSTALL_DIR=/opt/lamassu-server
export BACKUP_DIR=/opt

export LOG_FILE=/tmp/update.$(date +"%Y%m%d").log

rm -f ${LOG_FILE}

decho () {
  echo `date +"%H:%M:%S"` $1
  echo `date +"%H:%M:%S"` $1 >> ${LOG_FILE}
}

cat <<'FIG'
 _
| | __ _ _ __ ___   __ _ ___ ___ _   _       ___  ___ _ ____   _____ _ __
| |/ _` | '_ ` _ \ / _` / __/ __| | | |_____/ __|/ _ \ '__\ \ / / _ \ '__|
| | (_| | | | | | | (_| \__ \__ \ |_| |_____\__ \  __/ |   \ V /  __/ |
|_|\__,_|_| |_| |_|\__,_|___/___/\__,_|     |___/\___|_|    \_/ \___|_|
FIG

echo -e "\nStarting \033[1mlamassu-server\033[0m update. This will take a few minutes...\n"

if [ "$(whoami)" != "root" ]; then
  echo -e "This script has to be run as \033[1mroot\033[0m user"
  exit 3
fi

decho "stopping lamassu-server"
supervisorctl stop lamassu-server >> ${LOG_FILE} 2>&1
supervisorctl stop lamassu-admin-server >> ${LOG_FILE} 2>&1

set +e
# this can return exit code 1 if command was not found
OLD_LS=$(which lamassu-server)
set -e

if [ ! -z "${OLD_LS}" ] && [ "${OLD_LS}" != "${INSTALL_DIR}/bin/lamassu-server" ]; then
    # workout the base installation path
    OLD_LS=$(realpath ${OLD_LS})
    OLD_LS=$(dirname ${OLD_LS})
    OLD_LS=$(dirname ${OLD_LS})
    decho "archiving old lamassu-server installation located in ${OLD_LS}"

    BACKUP_NAME=${BACKUP_DIR}/lamassu-server-$(date +%s).tar.gz
    tar czf ${BACKUP_NAME} ${OLD_LS}/ >> ${LOG_FILE} 2>&1
    rm -Rfv ${OLD_LS} >> ${LOG_FILE} 2>&1
    decho "backup copy stored in ${BACKUP_NAME}"
fi

NPM_BIN=$(npm -g bin)
decho "unlinking old ${NPM_BIN}/lamassu* executables"
find ${NPM_BIN} -type l \( -name "lamassu-*" -or -name "hkdf" \) -exec rm -fv {} \; >> ${LOG_FILE} 2>&1

decho "updating node"
npm install n -g >> ${LOG_FILE} 2>&1
n lts >> ${LOG_FILE} 2>&1
decho "version installed $(node -v)"

decho "updating lamassu-server#master"
mkdir -vp ${INSTALL_DIR} >> ${LOG_FILE} 2>&1
cd ${INSTALL_DIR} >> ${LOG_FILE} 2>&1
npm --unsafe-perm install --production lamassu/lamassu-server#master >> ${LOG_FILE} 2>&1

decho "Adding ${INSTALL_DIR}/bin to PATH"
if [ ! -f "${INSTALL_DIR}/bin" ]; then
    ln -s ${INSTALL_DIR}/node_modules/lamassu-server/bin ${INSTALL_DIR}/bin >> $LOG_FILE 2>&1
fi
export PATH=${PATH}:${INSTALL_DIR}/bin
perl -i -pe 's/PATH=.*/PATH=$ENV{PATH}/g' /etc/environment >> ${LOG_FILE} 2>&1

decho "rebuilding npm deps"
npm rebuild >> ${LOG_FILE} 2>&1

decho "running migration"
lamassu-migrate >> ${LOG_FILE} 2>&1
lamassu-migrate-config >> ${LOG_FILE} 2>&1

decho "updating supervisor conf"
perl -i -pe 's/command=.*/command=$ENV{INSTALL_DIR}\/bin\/lamassu-server/g' /etc/supervisor/conf.d/lamassu-server.conf >> ${LOG_FILE} 2>&1
perl -i -pe 's/command=.*/command=$ENV{INSTALL_DIR}\/bin\/lamassu-admin-server/g' /etc/supervisor/conf.d/lamassu-admin-server.conf >> ${LOG_FILE} 2>&1

decho "updating lamassu-server"
supervisorctl update lamassu-server >> ${LOG_FILE} 2>&1
supervisorctl update lamassu-admin-server >> ${LOG_FILE} 2>&1
supervisorctl start lamassu-server >> ${LOG_FILE} 2>&1
supervisorctl start lamassu-admin-server >> ${LOG_FILE} 2>&1

decho "updating crontab (before)"
crontab -l >> ${LOG_FILE} 2>&1

decho "updating backup cronjob"
BACKUP_CMD=${INSTALL_DIR}/bin/lamassu-backup-pg
BACKUP_CRON="@daily $BACKUP_CMD > /dev/null"
( (crontab -l 2>/dev/null || echo -n "") | grep -v "@daily.*lamassu-backup-pg"; echo $BACKUP_CRON ) | crontab - >> ${LOG_FILE} 2>&1
$BACKUP_CMD >> ${LOG_FILE} 2>&1

decho "updating crontab (after)"
crontab -l >> ${LOG_FILE} 2>&1

decho "updating motd scripts"
set +e
chmod -x /etc/update-motd.d/*-release-upgrade
chmod -x /etc/update-motd.d/*-updates-available
chmod -x /etc/update-motd.d/*-reboot-required
chmod -x /etc/update-motd.d/*-help-text
chmod -x /etc/update-motd.d/*-cloudguest
set -e

# reset terminal to link new executables
hash -r

decho "Update complete!"
